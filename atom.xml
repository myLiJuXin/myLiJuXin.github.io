<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初心不变</title>
  
  <subtitle>积跬步,行至天涯</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://myLiJuXin.com/"/>
  <updated>2018-11-16T04:23:21.567Z</updated>
  <id>http://myLiJuXin.com/</id>
  
  <author>
    <name>LJX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>枚举的入门学习</title>
    <link href="http://myLiJuXin.com/2018/11/16/JAVA%E6%9E%9A%E4%B8%BE%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://myLiJuXin.com/2018/11/16/JAVA枚举的使用/</id>
    <published>2018-11-16T01:58:51.000Z</published>
    <updated>2018-11-16T04:23:21.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-什么情况下使用枚举类"><a href="#一-什么情况下使用枚举类" class="headerlink" title="一.什么情况下使用枚举类"></a>一.什么情况下使用枚举类</h2><p>​    类的对象是有限且固定的,使用枚举类</p><h2 id="二-为什么不使用静态常量替代枚举类"><a href="#二-为什么不使用静态常量替代枚举类" class="headerlink" title="二.为什么不使用静态常量替代枚举类"></a>二.为什么不使用静态常量替代枚举类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SEASON_SPRING = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SEASON_SUMMER = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SEASON_FALL = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SEASON_WINTER = <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>​    枚举类更加直观，类型安全。使用常量会有缺陷：</p><pre><code>1. 类型不安全。若一个方法中要求传入季节这个参数，用常量的话，形参就是int类型，开发者传入任意类型的int类型值就行，但是如果是枚举类型的话，就只能传入枚举类中包含的对象。2.  没有命名空间。开发者要在命名的时候以SEASON_开头，这样另外一个开发者再看这段代码的时候，才知道这四个常量分别代表季节。</code></pre><h2 id="三-枚举类入门"><a href="#三-枚举类入门" class="headerlink" title="三.枚举类入门"></a>三.枚举类入门</h2><p>​    简单的枚举类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> enumcase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> SeasonEnum &#123;</span><br><span class="line">    SPRING,SUMMER,FALL,WINTER;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>enum和class、interface的地位一样</li><li>使用enum定义的枚举类默认继承了java.lang.Enum，而不是继承Object类。枚举类可以实现一个或多个接口。</li><li>枚举类的所有实例都必须放在第一行展示，不需使用new 关键字，不需显式调用构造器。自动添加public static final修饰。</li><li>使用enum定义、非抽象的枚举类默认使用final修饰，不可以被继承。</li><li>枚举类的构造器只能是私有的。</li></ol><h2 id="四-枚举类介绍"><a href="#四-枚举类介绍" class="headerlink" title="四.枚举类介绍"></a>四.枚举类介绍</h2><p>​    枚举类内也可以定义属性和方法，可是是静态的和非静态的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> enumcase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> SeasonEnum &#123;</span><br><span class="line">    SPRING(<span class="string">"春天"</span>),SUMMER(<span class="string">"夏天"</span>),FALL(<span class="string">"秋天"</span>),WINTER(<span class="string">"冬天"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SeasonEnum</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    实际上在第一行写枚举类实例的时候，默认是调用了构造器的，所以此处需要传入参数，因为没有显式申明无参构造器，只能调用有参数的构造器。</p><p>　　构造器需定义成私有的，这样就不能在别处申明此类的对象了。枚举类通常应该设计成不可变类，它的Field不应该被改变，这样会更安全，而且代码更加简洁。所以我们将Field用private final修饰。</p><h2 id="五-枚举类实现接口（自定义抽象方法）"><a href="#五-枚举类实现接口（自定义抽象方法）" class="headerlink" title="五.枚举类实现接口（自定义抽象方法）"></a>五.枚举类实现接口（自定义抽象方法）</h2><p>​    枚举类可以实现一个或多个接口。与普通类一样，实现接口的时候需要实现接口中定义的所有方法，若没有完全实现，那这个枚举类就是抽象的，只是不需显式加上abstract修饰，系统化会默认加上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> enumcase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Operation &#123;</span><br><span class="line">    PLUS&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">eval</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x + y;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;,</span><br><span class="line">    MINUS&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">eval</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x - y;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;,</span><br><span class="line">    TIMES&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">eval</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x * y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    DIVIDE&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">eval</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x / y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 抽象方法，由不同的枚举值提供不同的实现。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">eval</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Operation.PLUS.eval(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line">        System.out.println(Operation.MINUS.eval(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line">        System.out.println(Operation.TIMES.eval(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line">        System.out.println(Operation.DIVIDE.eval(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    Operatio类实际上是抽象的，不可以创建枚举值，所以此处在申明枚举值的时候，都实现了抽象方法，这其实是匿名内部类的实现，花括号部分是一个类体。我们可以看下编译以后的文件。</p><p><img src="/2018/11/16/JAVA枚举的使用/1.png" alt=""></p><p>​    共生成了五个class文件，这样就证明了PLUS,MINUS,TIMES,DIVIDE是Operation的匿名内部类的实例。</p><h2 id="六-switch语句中的使用"><a href="#六-switch语句中的使用" class="headerlink" title="六.switch语句中的使用"></a>六.switch语句中的使用</h2><p>​    Java5新增enum关键字，同时扩展了switch。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> enumcase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SeasonTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">judge</span><span class="params">(SeasonEnum s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(s) &#123;</span><br><span class="line">        <span class="keyword">case</span> SPRING:</span><br><span class="line">            System.out.println(<span class="string">"春天适合踏青。"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SUMMER:</span><br><span class="line">            System.out.println(<span class="string">"夏天要去游泳啦。"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FALL:</span><br><span class="line">            System.out.println(<span class="string">"秋天一定要去旅游哦。"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WINTER:</span><br><span class="line">            System.out.println(<span class="string">"冬天要是下雪就好啦。"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SeasonEnum s = SeasonEnum.SPRING;</span><br><span class="line">        SeasonTest test = <span class="keyword">new</span> SeasonTest();</span><br><span class="line">        test.judge(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    case表达式中直接写入枚举值，不需加入枚举类作为限定。</p>]]></content>
    
    <summary type="html">
    
      枚举的入门学习和使用
    
    </summary>
    
      <category term="JAVA基础" scheme="http://myLiJuXin.com/categories/JAVA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="枚举" scheme="http://myLiJuXin.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>关于数据库redis与Mysql的区别以及在web开发中的配合使用</title>
    <link href="http://myLiJuXin.com/2018/06/21/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93redis%E4%B8%8EMysql%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E5%8F%8A%E5%9C%A8web%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E9%85%8D%E5%90%88%E4%BD%BF%E7%94%A8/"/>
    <id>http://myLiJuXin.com/2018/06/21/关于数据库redis与Mysql的区别以及在web开发中的配合使用/</id>
    <published>2018-06-21T13:51:28.000Z</published>
    <updated>2018-10-19T07:47:29.598Z</updated>
    
    <content type="html"><![CDATA[<h3 id="传统型关系数据库Mysql的瓶颈"><a href="#传统型关系数据库Mysql的瓶颈" class="headerlink" title="传统型关系数据库Mysql的瓶颈"></a>传统型关系数据库Mysql的瓶颈</h3><p>在互联网领域，MySQL作为一款关系型数据库为互联网的发展做出了卓越的贡献。然而随着互联网的发展，在大数据量高并发的环境下，应用开发也越来越复杂，具有很强的技术挑战性。分表分库子库等无不在增加数据库结构的复杂程度。MySQL数据库也经常存储一些大文本字段，导致数据库表非常的大，在做数据库恢复的时候就导致非常的慢，不容易快速恢复数据库。比如1000万4KB大小的文本就接近40GB的大小，如果能把这些数据从MySQL省去，MySQL将变得非常的小。<br><br>关系数据库很强大，但是它并不能很好的应付所有的应用场景。MySQL的扩展性差，大数据下IO压力大，表结构更改困难。</p><h3 id="Nosql与redis"><a href="#Nosql与redis" class="headerlink" title="Nosql与redis"></a>Nosql与redis</h3><p>NoSQL最常见的解释是“non-relational”，“Not Only SQL”也被很多人接受，指的是非关系型的数据库。</p><h4 id="Nosql的优势"><a href="#Nosql的优势" class="headerlink" title="Nosql的优势"></a>Nosql的优势</h4><p>易扩展：NoSQL数据库种类繁多，但是一个共同的特点都是去掉关系数据库的关系型特性。数据之间无关系，这样就非常容易扩展。<br>大数据量，高性能：NoSQL数据库都具有非常高的读写性能，尤其在大数据量下，同样表现优秀。这得益于它的无关系性，数据库的结构简单<br>灵活的数据模型：NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。而在关系数据库里，增删字段是一件非常麻烦的事情。如果是非常大数据量的表，增加字段简直就是一个噩梦<br>高可用：NoSQL在不太影响性能的情况，就可以方便的实现高可用的架构。</p><h4 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h4><p>Redis是一个开源（BSD许可）的、内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。<br>redis是一个高性能的key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sortedset–有序集合)和hash（哈希类型）。redis的出现，很大程度补偿了memcached这类key/value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。它提供了Python，Ruby，Erlang，PHP客户端，使用很方便<br>Redis支持主从同步。数据可以从主服务器向任意数量的从服务器上同步，从服务器可以是关联其他从服务器的主服务器。这使得Redis可执行单层树复制。从盘可以有意无意的对数据进行写操作。由于完全实现了发布/订阅机制，使得从数据库在任何地方同步树时，可订阅一个频道并接收主服务器完整的消息发布记录。同步对读取操作的可扩展性和数据冗余很有帮助。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>NoSQL数据库的出现，弥补了关系数据（比如MySQL）在某些方面的不足，在某些方面能极大的节省开发成本和维护成本<br>MySQL和NoSQL都有各自的特点和使用的应用场景，两者的紧密结合将会给数据库发展带来新的思路。让关系数据库关注在关系上，NoSQL关注在存储上。</p><h3 id="利用redis做mysql的缓存"><a href="#利用redis做mysql的缓存" class="headerlink" title="利用redis做mysql的缓存"></a>利用redis做mysql的缓存</h3><p>前面部分已经介绍mysql的瓶颈，当网站的处理和访问量非常大的时候，我们的数据库的压力就变大了，数据库的连接池，数据库同时处理数据的能力就会受到很大的挑战，一旦数据库承受了其最大承受能力，网站的数据处理效率就会大打折扣。此时就要使用高并发处理、负载均衡和分布式数据库，而这些技术既花费人力，又花费资金。</p><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><img src="/2018/06/21/关于数据库redis与Mysql的区别以及在web开发中的配合使用/1.jpg"><p>页面缓存经常用在CMS(content manage system)内存管理系统里面。<br>数据缓存经常会用在页面的具体数据里面。</p><h4 id="Redis缓存原理"><a href="#Redis缓存原理" class="headerlink" title="Redis缓存原理"></a>Redis缓存原理</h4><p>采用redis nosql数据库作为Mysql数据库的缓存，在查找的时候，首先查找redis缓存，如果找到则返回结果；如果在redis中没有找到，那么查找Mysql数据库，找到的花则返回结果并且更新redis；如果没有找到则返回空。</p><img src="/2018/06/21/关于数据库redis与Mysql的区别以及在web开发中的配合使用/2.jpg"><p>对于写入：用户增删改数据库，先访问mysql，mysql再把数据更新到redis。</p><p>Mysql中的数据都是按表存储的；更微观地看，这些表都是按行存储的。每执行一次select查询，Mysql都会返回一个结果集，这个结果集由若干行组成。所以，一个自然而然的想法就是在Redis中找到一种对应于Mysql行的数据结构。<br>Redis中提供了五种基本数据结构，即字符串（string）、列表（list）、哈希（hash）、集合（set）和有序集合（sorted set）。经过调研，发现适合存储行的数据结构有两种，即string和hash。</p><p>用户的缓存数据在返回时一般都是JSON的字典格式，对应的存到redis里就是hash格式，这个与python的字典是相对应的。</p><table><thead><tr><th>redis中的hash</th><th>python中的字典</th></tr></thead><tbody><tr><td><font color="#000000">key</font></td><td><font color="#000000">对象</font></td></tr><tr><td><font color="#000000">field</font></td><td><font color="#000000">key</font></td></tr><tr><td><font color="#000000">value</font></td><td><font color="#000000">value</font></td></tr></tbody></table><p>即hash会根据要缓存的数据生成唯一标识UUID，UUID作为键，用户的字典数据中的键值对作为UUID键的值，存储到redis中。</p>]]></content>
    
    <summary type="html">
    
      redis与mysql的优缺点分析，以及在web中的配合使用
    
    </summary>
    
      <category term="数据库" scheme="http://myLiJuXin.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库,redis,mysql" scheme="http://myLiJuXin.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93-redis-mysql/"/>
    
  </entry>
  
  <entry>
    <title>java单例和多例了解</title>
    <link href="http://myLiJuXin.com/2017/08/24/java%E5%8D%95%E4%BE%8B%E5%92%8C%E5%A4%9A%E4%BE%8B%E4%BA%86%E8%A7%A3/"/>
    <id>http://myLiJuXin.com/2017/08/24/java单例和多例了解/</id>
    <published>2017-08-24T13:37:10.000Z</published>
    <updated>2018-10-19T07:48:57.588Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-什么是单例-多例"><a href="#一-什么是单例-多例" class="headerlink" title="一.什么是单例,多例?"></a>一.什么是单例,多例?</h2><p>所谓单例就是所有的请求都用一个对象（实例）来处理，比如我们常用的service和dao层的对象通常都是单例的，而多例则指每个请求用一个新的对象（实例）来处理，比如action.</p><p>单例模式的关键有两点：<br>1.构造方法为私有，这样外界就不能随意调用。<br>2.get的方法为静态，由类直接调用</p><p>多例模式（Multiton）<br>1 、多例类可以有多个实例<br>2 、多例类必须能够自我创建并管理自己的实例，并向外界提供自己的实例。</p><p>单例模式和多例模式说明：</p><ol><li>单例模式和多例模式属于对象模式。</li><li>单例模式的对象在整个系统中只有一份，多例模式可以有多个实例。</li><li>它们都不对外提供构造方法，即构造方法都为私有。<h4 id="扩展-单例具体写法"><a href="#扩展-单例具体写法" class="headerlink" title="扩展:单例具体写法"></a><a href="https://blog.csdn.net/jtchen0401/article/details/78703815" target="_blank" rel="noopener">扩展:单例具体写法</a></h4><h2 id="二-如何产生单例多例？"><a href="#二-如何产生单例多例？" class="headerlink" title="二. 如何产生单例多例？"></a>二. 如何产生单例多例？</h2>在通用的SSM中，单例在spring中是默认的，如果要产生多例，则在配置文件的bean中添加scope=”prototype”或者使用注解@Scope在对应类上声明.<h2 id="三-spring中创建bean对象时多例和单例的区别"><a href="#三-spring中创建bean对象时多例和单例的区别" class="headerlink" title="三. spring中创建bean对象时多例和单例的区别"></a>三. spring中创建bean对象时多例和单例的区别</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">init-method</span></span><br><span class="line"><span class="comment">  * 该方法是由spring容器执行</span></span><br><span class="line"><span class="comment">  * 在构造函数之后执行</span></span><br><span class="line"><span class="comment">  * 如果在构造函数之后，在调用方法之前要做一些工作，可以在init方法中完成</span></span><br><span class="line"><span class="comment">destroy-method</span></span><br><span class="line"><span class="comment">  * 如果该bean是单例(默认就是singlton)，则在spring容器关闭或者销毁的时候，执行该方法</span></span><br><span class="line"><span class="comment">  * 如果该bean是多例(scope="prototype")，则spring容器不负责销毁</span></span><br><span class="line"><span class="comment">说明：要想让spring容器控制bean的生命周期，那么该bean必须是单例</span></span><br><span class="line"><span class="comment">   如果该bean是多例，该bean中还有资源，关闭资源的操作由程序员完成</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloWorld"</span> <span class="attr">class</span>=<span class="string">"cn.edu.initdestroy.HelloWorld"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"destroy"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>注意： 当一个bean是多例模式的情况下，lazy-init为false或者default无效。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">在默认情况下，spring创建bean是单例模式</span></span><br><span class="line"><span class="comment">scope</span></span><br><span class="line"><span class="comment">   singleton  默认</span></span><br><span class="line"><span class="comment">单例</span></span><br><span class="line"><span class="comment">属性是共享的</span></span><br><span class="line"><span class="comment">一般情况下，把数据存放在方法中的变量中</span></span><br><span class="line"><span class="comment">   prototype</span></span><br><span class="line"><span class="comment">多例</span></span><br><span class="line"><span class="comment">当一个bean是多例模式的情况下，lazy-init为false或者default无效</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloWorld"</span>  <span class="attr">class</span>=<span class="string">"cn.itcast.spring0909.scope.HelloWorld"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> <span class="attr">lazy-init</span>=<span class="string">"false"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">在启动spring容器的时候，spring容器配置文件中的类就已经创建完成对象了</span></span><br><span class="line"><span class="comment">lazy-init</span></span><br><span class="line"><span class="comment">   default 即为 false</span></span><br><span class="line"><span class="comment">   true  在context.getBean的时候才要创建对象</span></span><br><span class="line"><span class="comment">  *  优点</span></span><br><span class="line"><span class="comment">如果该bean中有大数据存在，则什么时候context.getBean,什么时候创建对象</span></span><br><span class="line"><span class="comment">可以防止数据过早的停留在内存中，做到了懒加载</span></span><br><span class="line"><span class="comment">  *  缺点</span></span><br><span class="line"><span class="comment">如果spring配置文件中，该bean的配置有错误，那么在tomcat容器启动的时候，发现不了</span></span><br><span class="line"><span class="comment">   false 在启动spring容器的时候创建对象</span></span><br><span class="line"><span class="comment">  *  优点</span></span><br><span class="line"><span class="comment">如果在启动tomcat时要启动spring容器，</span></span><br><span class="line"><span class="comment">那么如果spring容器会错误，这个时候tomcat容器不会正常启动</span></span><br><span class="line"><span class="comment">  *  缺点</span></span><br><span class="line"><span class="comment">如果存在大量的数据，会过早的停留在内存中</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloWorld"</span> <span class="attr">class</span>=<span class="string">"cn.edu.spring0909.createobject.when.HelloWorl"</span> <span class="attr">lazy-init</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"person"</span> <span class="attr">class</span>=<span class="string">"cn.edu.spring0909.createobject.when.Person"</span> <span class="attr">lazy-init</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四-为什么要用单例多例？"><a href="#四-为什么要用单例多例？" class="headerlink" title="四. 为什么要用单例多例？"></a>四. 为什么要用单例多例？</h2><p>之所以用单例，是因为没必要每个请求都新建一个对象，这样子既浪费CPU又浪费内存；<br>之所以用多例，是为了防止并发问题；即一个请求改变了对象的状态，此时对象又处理另一个请求，而之前请求对对象状态的改变导致了对象对另一个请求做了错误的处理；</p><h2 id="五-什么时候用单例，什么时候用多例？"><a href="#五-什么时候用单例，什么时候用多例？" class="headerlink" title="五. 什么时候用单例，什么时候用多例？"></a>五. 什么时候用单例，什么时候用多例？</h2><p>用单例和多例的标准只有一个：<br>当对象含有可改变的状态时（更精确的说就是在实际应用中该状态会改变），则多例，否则单例；<br>另外要说一下，并不是说service或dao一定是单例，标准同第四点所讲的，就曾见过有的service中也包含了可改变的状态，同时执行方法也依赖该状态，但一样用的单例，这样就会出现隐藏的BUG,而并发的BUG通常很难重现和查找.</p>]]></content>
    
    <summary type="html">
    
      对于java设计模式中单例多例的一些理解
    
    </summary>
    
      <category term="设计模式" scheme="http://myLiJuXin.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="单例,基础,多例" scheme="http://myLiJuXin.com/tags/%E5%8D%95%E4%BE%8B-%E5%9F%BA%E7%A1%80-%E5%A4%9A%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>java中耦合解耦内聚相关了解</title>
    <link href="http://myLiJuXin.com/2017/05/25/java%E4%B8%AD%E8%80%A6%E5%90%88%E8%A7%A3%E8%80%A6%E5%86%85%E8%81%9A%E7%9B%B8%E5%85%B3%E4%BA%86%E8%A7%A3/"/>
    <id>http://myLiJuXin.com/2017/05/25/java中耦合解耦内聚相关了解/</id>
    <published>2017-05-25T08:35:01.000Z</published>
    <updated>2018-11-16T04:23:26.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-程序的耦合关系以及解耦的方式"><a href="#一-程序的耦合关系以及解耦的方式" class="headerlink" title="一.程序的耦合关系以及解耦的方式"></a>一.程序的耦合关系以及解耦的方式</h2><h3 id="1-耦合与解耦的概念"><a href="#1-耦合与解耦的概念" class="headerlink" title="1.耦合与解耦的概念"></a>1.耦合与解耦的概念</h3><div>耦合: 在软件工程中，对象之间的耦合度就是对象之间的依赖性。对象之间的耦合越高，维护成本越高，因此对象的设计应使类和构件之间的耦合最小<br><br>解耦:在软件工程中，降低耦合度即可以理解为解耦，模块间有依赖关系必然存在耦合，理论上的绝对零耦合是做不到的，但可以通过一些现有的方法将耦合度降至最低</div><h3 id="2-程序中存在的耦合关系与解耦的方式"><a href="#2-程序中存在的耦合关系与解耦的方式" class="headerlink" title="2.程序中存在的耦合关系与解耦的方式"></a>2.程序中存在的耦合关系与解耦的方式</h3><h4 id="2-1-耦合简单的例子"><a href="#2-1-耦合简单的例子" class="headerlink" title="2.1 耦合简单的例子:"></a>2.1 耦合简单的例子:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(A a)</span></span>&#123;</span><br><span class="line">System.out.println(a.i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码就属于强耦合,B类中方法put要执行必须需要A类中的int属性i,缺了A,B中方法就不能执行</p><h4 id="2-2-使用面向接口的编程方式实现上面例子的解耦"><a href="#2-2-使用面向接口的编程方式实现上面例子的解耦" class="headerlink" title="2.2 使用面向接口的编程方式实现上面例子的解耦:"></a>2.2 使用面向接口的编程方式实现上面例子的解耦:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBase</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">IBase</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"I am A"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">IBase</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"I am B"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(IBase base)</span></span>&#123;</span><br><span class="line">base.say();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这只是其中的一种情况</p><h4 id="2-3-根据耦合程度分类"><a href="#2-3-根据耦合程度分类" class="headerlink" title="2.3 根据耦合程度分类"></a>2.3 根据耦合程度分类</h4><p><img src="/2017/05/25/java中耦合解耦内聚相关了解/耦合关系.png" alt=""><br>总结：<br>耦合是影响软件复杂程度和设计质量的一个重要因素，在设计上我们应采用以下原则：如果模块间必须存在耦合，就尽量使用数据耦合，少用控制耦合，限制公共耦合的范围，尽量避免使用内容耦合。</p><h4 id="2-4-解耦"><a href="#2-4-解耦" class="headerlink" title="2.4 解耦"></a>2.4 解耦</h4><p>解耦的本质就是将类之间的直接关系转换成间接关系，不管是类向上转型还是接口回调都是在类之间加了一层，将原来的直接关系变成间接关系，使得两类对中间层是强耦合，两类之间变成弱耦合关系。</p><p>（a）采用现有设计模式实现解耦，如事件驱动模式、观察者模式、责任链模式等都可以达到解耦的目的；<br>（b）采用面向接口的方式编程，而不是用直接的类型引用，除非在最小内聚单元内部。但使用该方法解耦需要注意不要滥用接口。<br>（c）高内聚，往往会带来一定程度的低耦合度。高内聚决定了内部自行依赖，对外只提供必须的接口或消息对象，那么由此即可达成较低的耦合度。<br>  ( d )注解，以注解的方式，将方法，属性注入依赖，实现高扩展性。</p><p>解耦总的一句话来说，减少依赖，抽象业务和逻辑，让各个功能实现独立。</p><h4 id="2-5-内聚与耦合"><a href="#2-5-内聚与耦合" class="headerlink" title="2.5 内聚与耦合"></a>2.5 内聚与耦合</h4><div>内聚标志一个模块内各个元素彼此结合的紧密程度，它是信息隐蔽和局部化概念的自然扩展。内聚是从功能角度来度量模块内的联系，一个好的内聚模块应当恰好做一件事。它描述的是模块内的功能联系。<br><br>耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度、进入或访问一个模块的点以及通过接口的数据。<br><br>程序讲究的是低耦合，高内聚。就是同一个模块内的各个元素之间要高度紧密，但是各个模块之间的相互依存度却要不那么紧密。 </div>]]></content>
    
    <summary type="html">
    
      关于java中耦合解耦内聚相关了解学习
    
    </summary>
    
      <category term="概念" scheme="http://myLiJuXin.com/categories/%E6%A6%82%E5%BF%B5/"/>
    
    
      <category term="耦合,解耦" scheme="http://myLiJuXin.com/tags/%E8%80%A6%E5%90%88-%E8%A7%A3%E8%80%A6/"/>
    
  </entry>
  
  <entry>
    <title>关于Linux的常用基本命令（二）</title>
    <link href="http://myLiJuXin.com/2017/04/23/%E5%85%B3%E4%BA%8ELinux%E7%9A%84%E7%BB%88%E7%AB%AF%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://myLiJuXin.com/2017/04/23/关于Linux的终端常用命令（二）/</id>
    <published>2017-04-23T09:39:04.000Z</published>
    <updated>2018-10-19T07:46:11.517Z</updated>
    
    <content type="html"><![CDATA[<div>接上面《关于Linux的常用基本命令（一）》</div><a href="https://zypuu.github.io/2018/08/15/%E5%85%B3%E4%BA%8ELinux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="noopener">点这里</a><br><br>#### 管道命令<br><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">【命令1】 | 【命令2】 # 命令1的输出结果作为命令2的输入</span><br></pre></td></tr></table></figure><br><br>#### 查找某个文件的文本<br><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep 【选项】 “字符串”  【文件】</span><br><span class="line">选项：-i 忽略大小写</span><br><span class="line">  -n 显示匹配行及行号</span><br><span class="line">  -v 取反（显示余下的信息）</span><br></pre></td></tr></table></figure><br><br><div>例： ps -aux | grep ’mysql‘ 查看运行中的进程，带有mysql的进程</div><h4 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find 【路径】 【选项】</span><br><span class="line">选项：-name ’字符串‘ # 查找该文件名的文件</span><br><span class="line">           -size +（-）’大小‘ # 查找文件大于（小于）多少的文件</span><br><span class="line">   -permission 权限 # 查找拥有该权限的文件</span><br></pre></td></tr></table></figure><h4 id="tar打包压缩文件与解压缩"><a href="#tar打包压缩文件与解压缩" class="headerlink" title="tar打包压缩文件与解压缩"></a>tar打包压缩文件与解压缩</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar 【选项】【打包后的文件名】【 要打包的文件名】</span><br><span class="line">选项： -c 生成打包文件</span><br><span class="line">-v 显示进度</span><br><span class="line">-f 指定打包文件名称，所以f选项要放最后</span><br><span class="line">-x 拆包解包</span><br><span class="line">-z gzip格式压缩解压</span><br><span class="line">-j bzip2格式压缩解压</span><br><span class="line">c 指定目录</span><br></pre></td></tr></table></figure><h4 id="gzip格式压缩解压"><a href="#gzip格式压缩解压" class="headerlink" title="gzip格式压缩解压"></a>gzip格式压缩解压</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gizp 【文件名】 # 压缩文件</span><br><span class="line">gzip -d 【文件名】 # 解压缩文件</span><br></pre></td></tr></table></figure><h4 id="查看命令位置"><a href="#查看命令位置" class="headerlink" title="查看命令位置"></a>查看命令位置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which</span><br></pre></td></tr></table></figure><h4 id="查看当前用户登录"><a href="#查看当前用户登录" class="headerlink" title="查看当前用户登录"></a>查看当前用户登录</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">who # tty 本地登录 pts 远程登录</span><br></pre></td></tr></table></figure><h4 id="授权当前用户执行命令"><a href="#授权当前用户执行命令" class="headerlink" title="授权当前用户执行命令"></a>授权当前用户执行命令</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo # 管理员权限</span><br></pre></td></tr></table></figure><h4 id="退出终端，回到上一用户，退出远程"><a href="#退出终端，回到上一用户，退出远程" class="headerlink" title="退出终端，回到上一用户，退出远程"></a>退出终端，回到上一用户，退出远程</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><h4 id="软件卸载与安装"><a href="#软件卸载与安装" class="headerlink" title="软件卸载与安装"></a>软件卸载与安装</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install “安装包” # 安装</span><br><span class="line">sudo apt-get remove “安装包” # 删除</span><br><span class="line">sudo apt-get update “安装包” # 更新</span><br></pre></td></tr></table></figure><h4 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shutdown -h now （或加时间） # 立即关机，或者多少时间后关机</span><br><span class="line">-r # 重启</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      关于linux系统ubantu终端的一些常用命令整理
    
    </summary>
    
      <category term="Linux" scheme="http://myLiJuXin.com/categories/Linux/"/>
    
    
      <category term="Linux命令" scheme="http://myLiJuXin.com/tags/Linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>关于Linux终端的常用命令（一）</title>
    <link href="http://myLiJuXin.com/2017/04/21/%E5%85%B3%E4%BA%8ELinux%E7%9A%84%E7%BB%88%E7%AB%AF%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://myLiJuXin.com/2017/04/21/关于Linux的终端常用命令（一）/</id>
    <published>2017-04-21T11:15:15.000Z</published>
    <updated>2018-10-19T07:45:43.128Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><hr><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Linux由Unix发展而来，于1991年林纳斯（linus）发布，分为内核与发行版，内核（kernel）是系统的心脏，是运行程序和管理像磁盘和打印机等硬件设备的核心程序，主要做一些基本的，也是重要的操作。比如进程管理、内存管理、磁盘管理、驱动管理、电源管理、安全管理等。<br>Linux 内核版本又分为 稳定版 和 开发版，两种版本是相互关联，相互循环。<br>稳定版：具有工业级强度，可以广泛地应用和部署。新的稳定版相对于较旧的只是修正一些 bug 或加入一些新的驱动程序<br>开发版：由于要试验各种解决方案，所以变化很快<br>内核源码网址：<a href="http://www.kernel.org" target="_blank" rel="noopener">点这里</a><br></div><br><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Linux发行版通常包含了包括桌面环境、办公套件、媒体播放器、数据库等应用软件。<br><br>主要有：ubantu，centos，redhat, debian等，这里主要是ubantu的基本常用命令。<br></div><br>### Linux终端命令基本使用<br>———-<br><div>终端命令格式：Command 【-options（选项，可以配合使用）】【parameter（对象）】</div><h4 id="1-查看文件信息（在当前路径下输入即可查看当前路径文件）"><a href="#1-查看文件信息（在当前路径下输入即可查看当前路径文件）" class="headerlink" title="1. 查看文件信息（在当前路径下输入即可查看当前路径文件）"></a>1. 查看文件信息（在当前路径下输入即可查看当前路径文件）</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -l # 查看详情</span><br><span class="line">ls -a # 查看所有文件</span><br><span class="line">ls -h # 配合-l显示文件大小</span><br></pre></td></tr></table></figure><h4 id="2-通配符，可以代替字符"><a href="#2-通配符，可以代替字符" class="headerlink" title="2. 通配符，可以代替字符"></a>2. 通配符，可以代替字符</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* # 代表0个或多个任意字符</span><br><span class="line">？ # 代表任意一个字符</span><br></pre></td></tr></table></figure><h4 id="3-清屏"><a href="#3-清屏" class="headerlink" title="3. 清屏"></a>3. 清屏</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">按键：ctrl +L</span><br></pre></td></tr></table></figure><h4 id="4-切换路径（分为相对路径和绝对路径，相对路径从当前目录开始；绝对路径从根目录（-）开始）"><a href="#4-切换路径（分为相对路径和绝对路径，相对路径从当前目录开始；绝对路径从根目录（-）开始）" class="headerlink" title="4. 切换路径（分为相对路径和绝对路径，相对路径从当前目录开始；绝对路径从根目录（/）开始）"></a>4. 切换路径（分为相对路径和绝对路径，相对路径从当前目录开始；绝对路径从根目录（/）开始）</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ./Desktop # .代表当前路径</span><br><span class="line">cd ../ # ..代表上一级路径</span><br></pre></td></tr></table></figure><h4 id="5-显示当前绝对路径"><a href="#5-显示当前绝对路径" class="headerlink" title="5. 显示当前绝对路径"></a>5. 显示当前绝对路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure><h4 id="6-创建目录"><a href="#6-创建目录" class="headerlink" title="6. 创建目录"></a>6. 创建目录</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir 目录名</span><br><span class="line">mkdir a/b/c -p # 创建级联目录</span><br></pre></td></tr></table></figure><h4 id="7-创建文件（文件名指定后缀名）"><a href="#7-创建文件（文件名指定后缀名）" class="headerlink" title="7. 创建文件（文件名指定后缀名）"></a>7. 创建文件（文件名指定后缀名）</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch 文件名</span><br><span class="line">touch 文件1 文件2 文件3 # 创建多个文件</span><br></pre></td></tr></table></figure><h4 id="8-删除文件，目录"><a href="#8-删除文件，目录" class="headerlink" title="8. 删除文件，目录"></a>8. 删除文件，目录</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -i # 删除文件给予交互提示</span><br><span class="line">rm -f # 强制删除</span><br><span class="line">rm -r # 递归删除，删除目录</span><br></pre></td></tr></table></figure><h4 id="9-拷贝文件，目录"><a href="#9-拷贝文件，目录" class="headerlink" title="9. 拷贝文件，目录"></a>9. 拷贝文件，目录</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp 【源文件名】【目标目录路径】# 拷贝文件不能在本目录下，不能重名</span><br><span class="line">例： cp <span class="number">1.</span>txt ./a 将<span class="number">1.</span>txt复制到当前目录的a目录下</span><br><span class="line">cp 【源文件名】【目标文件名】# 拷贝并重命名</span><br><span class="line">例： cp a.txt b.txt 复制a并命名为b</span><br><span class="line">选项： -r 拷贝文件夹  -f 强制拷贝 -i交互提示</span><br></pre></td></tr></table></figure><h4 id="10-移动文件，文件夹"><a href="#10-移动文件，文件夹" class="headerlink" title="10. 移动文件，文件夹"></a>10. 移动文件，文件夹</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv 【源文件名】【移动目标路径】# 移动目录不用-r 例：mv 1.txt ./a 将1文件移动到当前目录的a目录下</span><br><span class="line">mv 【源文件名】【移动后文件名】# 重命名，不能重名 例： mv a.py b.py</span><br></pre></td></tr></table></figure><h4 id="11-树状显示目录"><a href="#11-树状显示目录" class="headerlink" title="11. 树状显示目录"></a>11. 树状显示目录</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree</span><br></pre></td></tr></table></figure><h4 id="12-查看历史命令"><a href="#12-查看历史命令" class="headerlink" title="12. 查看历史命令"></a>12. 查看历史命令</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history # 显示历史命令</span><br><span class="line">！数字 # 引用某一行命令 例：！20，引用20行命令</span><br></pre></td></tr></table></figure><h4 id="13-查看，写入文件内容"><a href="#13-查看，写入文件内容" class="headerlink" title="13. 查看，写入文件内容"></a>13. 查看，写入文件内容</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat 【文件名】 # 查看 例：cat 1.txt</span><br><span class="line">gedit 【文件名】# 写入 例 ： gedit 1.txt</span><br></pre></td></tr></table></figure><h4 id="14-重定向（将命令执行结果保存到另一个文件中）"><a href="#14-重定向（将命令执行结果保存到另一个文件中）" class="headerlink" title="14. 重定向（将命令执行结果保存到另一个文件中）"></a>14. 重定向（将命令执行结果保存到另一个文件中）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; # 覆盖</span><br><span class="line">&gt;&gt; # 追加 </span><br><span class="line">例： cat <span class="number">1.</span>txt <span class="number">2.</span>txt &gt; <span class="number">3</span>,txt 将<span class="number">1</span>,<span class="number">2</span>两个文件的内容重定向到<span class="number">3</span>里，<span class="number">3.</span>txt不存在则创建</span><br></pre></td></tr></table></figure><h4 id="15-分屏显示内容"><a href="#15-分屏显示内容" class="headerlink" title="15. 分屏显示内容"></a>15. 分屏显示内容</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more # 分屏显示文件内容，一般接到其他命令后，空格切换屏幕</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      关于linux系统ubantu终端的一些常用命令整理
    
    </summary>
    
      <category term="Linux" scheme="http://myLiJuXin.com/categories/Linux/"/>
    
    
      <category term="Linux命令" scheme="http://myLiJuXin.com/tags/Linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>spring基于注解的IOC配置</title>
    <link href="http://myLiJuXin.com/2016/11/24/spring%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84IOC%E9%85%8D%E7%BD%AE/"/>
    <id>http://myLiJuXin.com/2016/11/24/spring基于注解的IOC配置/</id>
    <published>2016-11-24T01:58:51.000Z</published>
    <updated>2018-10-19T07:48:20.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-为什么要用注解"><a href="#一-为什么要用注解" class="headerlink" title="一.为什么要用注解"></a>一.为什么要用注解</h2><p>spring 注解可以减少xml配置；<br>　　注释配置相对于 XML 配置具有很多的优势：<br>　　它可以充分利用 Java 的反射机制获取类结构信息，这些信息可以有效减少配置的工作。如使用 JPA 注释配置 ORM 映射时，我们就不需要指定 PO 的属性名、类型等信息，如果关系表字段和 PO 属性名、类型都一致，您甚至无需编写任务属性映射信息——因为这些信息都可以通过 Java 反射机制获取。<br>　　注释和 Java 代码位于一个文件中，而 XML 配置采用独立的配置文件，大多数配置信息在程序开发完成后都不会调整，如果配置信息和 Java 代码放在一起，有助于增强程序的内聚性。而采用独立的 XML 配置文件，程序员在编写一个功能时，往往需要在程序文件和配置文件中不停切换，这种思维上的不连贯会降低开发效率。</p><h2 id="二-环境配置"><a href="#二-环境配置" class="headerlink" title="二.环境配置"></a>二.环境配置</h2><h3 id="基于注解的IOC配置共有两种："><a href="#基于注解的IOC配置共有两种：" class="headerlink" title="基于注解的IOC配置共有两种："></a>基于注解的IOC配置共有两种：</h3><h4 id="1-依赖于xml文件中context标签的配置。"><a href="#1-依赖于xml文件中context标签的配置。" class="headerlink" title="1.依赖于xml文件中context标签的配置。"></a>1.依赖于xml文件中context标签的配置。</h4><p>配置方法：在spring的配置文件中开启spring对注解ioc的支持<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 告知spring框架在，读取配置文件，创建容器时，扫描注解，依据注解创建对象，并存入容器中 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启包扫描--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.itcast"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>获取容器：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"配置文件全名称"</span>);</span><br></pre></td></tr></table></figure></p><h4 id="2-纯注解配置"><a href="#2-纯注解配置" class="headerlink" title="2.纯注解配置"></a>2.纯注解配置</h4><p>可以完全脱离xml文件<br>配置方法：在一个类上编写两个标签。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span><span class="comment">//表明当前类是一个配置类</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"配置要扫描的包"</span>)</span><br></pre></td></tr></table></figure></p><p>获取容器：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ac = <span class="keyword">new</span> AnnotationConfigApplicationContext(SpringConfiguration.class);<span class="comment">//参数为配置类的字节码文件</span></span><br></pre></td></tr></table></figure></p><h2 id="三-常用注解"><a href="#三-常用注解" class="headerlink" title="三.常用注解"></a>三.常用注解</h2><h3 id="1-创建对象-4个"><a href="#1-创建对象-4个" class="headerlink" title="1.创建对象(4个)"></a>1.创建对象(4个)</h3><p>创建对象交给spring管理的注解<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置到实现类上</span></span><br><span class="line"><span class="meta">@Component</span><span class="comment">//其他如工具类</span></span><br><span class="line"><span class="meta">@Controller</span>      <span class="comment">//web层</span></span><br><span class="line"><span class="meta">@Service</span>         <span class="comment">//service层</span></span><br><span class="line"><span class="meta">@Repository</span>    <span class="comment">//dao层</span></span><br><span class="line"><span class="comment">//默认创建对象的唯一标识：当前类名首字母小写</span></span><br><span class="line"><span class="comment">//value : 创建对象的唯一标识在注解后加("唯一标识")</span></span><br></pre></td></tr></table></figure></p><h3 id="2-依赖注入-4个"><a href="#2-依赖注入-4个" class="headerlink" title="2.依赖注入(4个)"></a>2.依赖注入(4个)</h3><p>依赖关系：<br>配置依赖关系到注解<br>将注解配置到依赖关系的属性上（set方法可以省略）或者set方法上<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span><span class="comment">//自动装载（自动赋值）</span></span><br><span class="line"><span class="comment">//1.按照类型（接口类型）从容器中查找对象，并注入（赋值）</span></span><br><span class="line"><span class="comment">//2.按照属性名称作为唯一标识从容器中查找对象，并注入</span></span><br><span class="line"><span class="meta">@Qualifier</span><span class="comment">//配合@Autowired一起使用</span></span><br><span class="line"><span class="comment">//按照指定的唯一标识，从容器中查找对象并注入</span></span><br><span class="line"><span class="meta">@Resource</span><span class="comment">//jdk提供的依赖注入的注解</span></span><br><span class="line"><span class="comment">//name：唯一标识</span></span><br><span class="line"><span class="comment">//根据唯一标识从容器中获取对象并注入</span></span><br><span class="line"> <span class="meta">@value</span><span class="comment">//配置属性上</span></span><br><span class="line"><span class="comment">//1.注入基本数据类型的</span></span><br><span class="line"><span class="comment">//**2.注入被spring容器管理的properties文件中的内容</span></span><br><span class="line"><span class="comment">//使用@value结合spring-el表达式获取properties文件中的内容</span></span><br><span class="line"><span class="comment">//语法：@Value(value="$&#123;properties文件中的key&#125;")</span></span><br></pre></td></tr></table></figure></p><h3 id="3-生命周期-3个"><a href="#3-生命周期-3个" class="headerlink" title="3.生命周期(3个)"></a>3.生命周期(3个)</h3><p>对象生命周期的注解<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.对象作用域</span></span><br><span class="line"><span class="meta">@Scope</span><span class="comment">//配置到类上</span></span><br><span class="line">      <span class="comment">//singleton：单例(默认值)</span></span><br><span class="line">      <span class="comment">//prototype：多例</span></span><br><span class="line"><span class="comment">//2.初始化方法:对象创建之后立即执行的方法</span></span><br><span class="line"><span class="comment">//替换xml中init-method</span></span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行初始化方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.销毁方法:和对象的作用域有关（singleton有效）：容器关闭，对象销毁执行的方法</span></span><br><span class="line"><span class="comment">//替换xml中destory-method</span></span><br><span class="line"><span class="meta">@PreDestroy</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行销毁方法"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="4-纯注解开发所用的注解"><a href="#4-纯注解开发所用的注解" class="headerlink" title="4.纯注解开发所用的注解"></a>4.纯注解开发所用的注解</h3><p>spring的配置类：替换xml中配置信息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.声明配置类(创建对象交给spring容器管理)</span></span><br><span class="line"><span class="comment">//创建对象交给spring容器管理 | 告诉spring容器</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//2.开启包扫描</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"包路径"</span>)</span><br><span class="line"><span class="comment">//3.将properties配置文件交给spring容器管理</span></span><br><span class="line"><span class="meta">@PropertySource</span>(value = <span class="string">"classpath:文件名称"</span>)</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="comment">//需要配置到方法上，此方法需要一个返回值</span></span><br><span class="line"><span class="comment">//表明：将此方法的返回值交给spring容器管理</span></span><br><span class="line"><span class="comment">//执行：spring容器创建的过程中，会扫描所有的@Bean注解</span></span><br><span class="line"><span class="comment">//执行当前注解配置的方法，得到返回值，将返回值存入spring容器</span></span><br><span class="line"><span class="comment">//name:唯一标识()</span></span><br><span class="line"><span class="meta">@Import</span> <span class="comment">//引入其他配置类</span></span><br><span class="line"><span class="comment">//value：其他配置类的字节码对象</span></span><br></pre></td></tr></table></figure></p><h3 id="5-spring整合Junit测试"><a href="#5-spring整合Junit测试" class="headerlink" title="5.spring整合Junit测试"></a>5.spring整合Junit测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.指定spring提供的单元测试环境</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="comment">//2.指定spring容器的配置信息</span></span><br><span class="line"><span class="meta">@ContextConfiguration</span>(classes = SpringConfig.class)</span><br></pre></td></tr></table></figure><p>注：整合junit是基于junit的，只有编译运行@Test，整合的注解才会执行替换原有的运行器。</p><h3 id="四-使用注解结合xml方式完成CRUD"><a href="#四-使用注解结合xml方式完成CRUD" class="headerlink" title="四.使用注解结合xml方式完成CRUD"></a>四.使用注解结合xml方式完成CRUD</h3><p>不做说明详见demo02</p><h3 id="五-使用纯注解方式完成CRUD"><a href="#五-使用纯注解方式完成CRUD" class="headerlink" title="五.使用纯注解方式完成CRUD"></a>五.使用纯注解方式完成CRUD</h3><p>不做说明详见demo03</p>]]></content>
    
    <summary type="html">
    
      spring框架的IOC配置注解方式入门学习使用
    
    </summary>
    
      <category term="spring框架" scheme="http://myLiJuXin.com/categories/spring%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="注解,IOC" scheme="http://myLiJuXin.com/tags/%E6%B3%A8%E8%A7%A3-IOC/"/>
    
  </entry>
  
  <entry>
    <title>spring框架入门学习</title>
    <link href="http://myLiJuXin.com/2016/11/23/spring%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://myLiJuXin.com/2016/11/23/spring框架入门学习/</id>
    <published>2016-11-23T01:08:20.000Z</published>
    <updated>2018-10-19T07:47:00.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-spring中的解耦方式IOC"><a href="#一-spring中的解耦方式IOC" class="headerlink" title="一.spring中的解耦方式IOC"></a>一.spring中的解耦方式IOC</h2><h3 id="IOC-控制反转-Inversion-Of-Control"><a href="#IOC-控制反转-Inversion-Of-Control" class="headerlink" title="IOC  控制反转-Inversion Of Control"></a>IOC  控制反转-Inversion Of Control</h3><div><br>它的作用:<br>减弱程序中的耦合也就是降低代码的依赖关系<br>将创建对象的权利交给框架<br><br>它的核心思想就是:<br>1.通过读取解析配置文件反射创建对象<br>2.将对象保存在一个容器内,供使用者调用<br>这里面要解释两个问题：<br><br>第一个：存哪去？<br>为了方便取出使用,应用map集合来装对象,因为map的key=value模式可以很方便的定位到所需要的对象<br><br>第二个： 什么是工厂？<br>工厂就是帮我们从容器中获得指定对象的类,此时我们的获取方式已经发生了改变,从原本的自己创建变成了现在的通过类查找被动获取.<br>这种被动获取对象的方式就是控制反转的思想<br></div><h2 id="二-spring的体系结构"><a href="#二-spring的体系结构" class="headerlink" title="二.spring的体系结构"></a>二.spring的体系结构</h2><p>spring5的结构体系图如下:<br><img src="/2016/11/23/spring框架入门学习/体系.png" alt=""><br>详细信息参考:<a href="https://blog.csdn.net/lj1314ailj/article/details/80118372" target="_blank" rel="noopener">Spring5 系统架构</a></p><h2 id="三-spring的依赖注入"><a href="#三-spring的依赖注入" class="headerlink" title="三.spring的依赖注入"></a>三.spring的依赖注入</h2><h3 id="spring的XML基础配置以及对象配置方式"><a href="#spring的XML基础配置以及对象配置方式" class="headerlink" title="spring的XML基础配置以及对象配置方式"></a>spring的XML基础配置以及对象配置方式</h3><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    beans</span></span><br><span class="line"><span class="comment">        xmlns:xml namespace （标签）</span></span><br><span class="line"><span class="comment">        xsd约束地址</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    方式一（重要）：反射</span></span><br><span class="line"><span class="comment">        bean : 创建对象交给spring容器管理</span></span><br><span class="line"><span class="comment">            id: 唯一标识</span></span><br><span class="line"><span class="comment">            class：实现类的全限定类名</span></span><br><span class="line"><span class="comment">            scope ： 创建对象的作用域</span></span><br><span class="line"><span class="comment">                singleton   ：单例（创建单例对象），随着容器的创建而创建，随着容器的关闭自动垃圾回收</span></span><br><span class="line"><span class="comment">                            ：默认值</span></span><br><span class="line"><span class="comment">                prototype   ：多例（多例对象），调用一次getBean方法，创建一个对象</span></span><br><span class="line"><span class="comment">                request     ：创建对象存入request域中</span></span><br><span class="line"><span class="comment">                session     ：创建对象存入session域中</span></span><br><span class="line"><span class="comment">            init-method （执行的方法名）: 指定初始化方法（创建对象之后，立即执行的方法）</span></span><br><span class="line"><span class="comment">            destroy-method （执行的方法名） ： 指定销毁方法（容器关闭对象销毁：scope必须为singleton）：对象销毁之前执行的方法</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">init-method</span>=<span class="string">"init"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">destroy-method</span>=<span class="string">"destory"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.service.impl.AccountServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--方式二：静态工厂--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService1"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.utils.AccountServiceFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getAccountService"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--方式三；实例化工厂 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--创建工厂--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountServiceFactory"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.utils.AccountServiceFactory1"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通过实例化工厂创建accoutService--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService2"</span> <span class="attr">factory-bean</span>=<span class="string">"accountServiceFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getAccountService"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><h3 id="依赖注入（Dependency-Injection-DI）"><a href="#依赖注入（Dependency-Injection-DI）" class="headerlink" title="依赖注入（Dependency Injection, DI）"></a>依赖注入（Dependency Injection, DI）</h3><h4 id="1-构造注入"><a href="#1-构造注入" class="headerlink" title="1.构造注入"></a>1.构造注入</h4><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建UserServiceImpl交给spring容器中管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserService"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> 使用构造方法注入数据 ： 调用有参构造</span></span><br><span class="line"><span class="comment">  constructor-arg: 构造方法参数</span></span><br><span class="line"><span class="comment">index:  根据构造方法中参数的索引</span></span><br><span class="line"><span class="comment">name:   根据构造方法中参数的名称</span></span><br><span class="line"><span class="comment">type:   根据构造方法中参数的类型</span></span><br><span class="line"><span class="comment">*** 以上三个属性是用于定位构造方法中参数的</span></span><br><span class="line"><span class="comment">value：  注入基本数据类型的数据</span></span><br><span class="line"><span class="comment">ref：    注入被spring容器管理的bean对象</span></span><br><span class="line"><span class="comment">*** 以上两个属性是对构造方法中参数赋值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">ref</span>=<span class="string">"UserDaoImpl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"1"</span> <span class="attr">value</span>=<span class="string">"测试数据"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"2"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"测试数据1"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"测试数据2"</span> <span class="attr">value</span>=<span class="string">"2"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span> <span class="attr">value-type</span>=<span class="string">"java.lang.String"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>测试数据1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>测试数据2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>测试数据3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建UserDaoImpl交给spring容器中管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"UserDaoImpl"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><h4 id="2-set注入"><a href="#2-set注入" class="headerlink" title="2.set注入"></a>2.set注入</h4><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建UserServiceImpl交给spring容器中管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserService"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--property :使用set方法注入</span></span><br><span class="line"><span class="comment">name:   定位set方法（set方法后面的部分，首字母小写）</span></span><br><span class="line"><span class="comment">   username  = setUsername（）  == 反射执行</span></span><br><span class="line"><span class="comment">value:  注入基本数据类型的数据</span></span><br><span class="line"><span class="comment">ref:    注入被spring容器管理的bean对象</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"UserDaoImpl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"王者"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"beans"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"王者"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"吃鸡"</span> <span class="attr">value</span>=<span class="string">"15"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>王者<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>持戒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建UserDaoImpl放入spring容器中管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"UserDaoImpl"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><h4 id="3-p组件注入-依赖set"><a href="#3-p组件注入-依赖set" class="headerlink" title="3.p组件注入(依赖set)"></a>3.p组件注入(依赖set)</h4><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="comment">&lt;!--使用p组件需要导入约束</span></span><br><span class="line"><span class="comment">xmlns:p="http://www.springframework.org/schema/p"--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--创建UserServiceImpl交给spring容器中管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserService"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.service.impl.UserServiceImpl"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:userDao-ref</span>=<span class="string">"UserDaoImpl"</span> <span class="attr">p:name</span>=<span class="string">"李"</span> <span class="attr">p:age</span>=<span class="string">"21"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--本质也是使用的set,不过是简写形式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"UserDaoImpl"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"王者"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"beans"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"王者"</span> <span class="attr">value</span>=<span class="string">"12"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"吃鸡"</span> <span class="attr">value</span>=<span class="string">"15"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>王者<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>持戒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--创建UserDaoImpl放入spring容器中管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"UserDaoImpl"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><h2 id="四-使用xml方式完成CRUD"><a href="#四-使用xml方式完成CRUD" class="headerlink" title="四.使用xml方式完成CRUD"></a>四.使用xml方式完成CRUD</h2><h3 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h3><h4 id="创建maven工程如下图"><a href="#创建maven工程如下图" class="headerlink" title="创建maven工程如下图"></a>创建maven工程如下图</h4><p><img src="/2016/11/23/spring框架入门学习/工程结构.png" alt=""></p><h4 id="创建pojo类"><a href="#创建pojo类" class="headerlink" title="创建pojo类"></a>创建pojo类</h4><p>pojo代码<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> money;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">"Account&#123;"</span>);</span><br><span class="line">        sb.append(<span class="string">"id="</span>).append(id);</span><br><span class="line">        sb.append(<span class="string">", name='"</span>).append(name).append(<span class="string">'\''</span>);</span><br><span class="line">        sb.append(<span class="string">", money="</span>).append(money);</span><br><span class="line">        sb.append(<span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">float</span> money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h4 id="创建业务层接口和实现类"><a href="#创建业务层接口和实现类" class="headerlink" title="创建业务层接口和实现类"></a>创建业务层接口和实现类</h4><p>service接口代码<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名更新money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找对应用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><br>service实现类代码<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//声明accountDao</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//accountDao的set方法 供依赖注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        accountDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名更新money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找对应用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h4 id="创建持久层接口和实现类"><a href="#创建持久层接口和实现类" class="headerlink" title="创建持久层接口和实现类"></a>创建持久层接口和实现类</h4><p>dao接口代码<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名更新money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找对应用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Account <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><br>dao实现类代码<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//声明jdbcTemplate</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//jdbcTemplate的set方法 供依赖注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">"insert into account(name,money) values(?,?)"</span>,account.getName(),account.getMoney());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">" delete from account where id=? "</span>,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名更新money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">" update account set money=? where name=? "</span>,</span><br><span class="line">                                 account.getMoney(),account.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找对应用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(<span class="string">" select * from account where name=? "</span>,</span><br><span class="line">                <span class="keyword">new</span> BeanPropertyRowMapper&lt;Account&gt;(Account.class),name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h3 id="2-spring的XML配置"><a href="#2-spring的XML配置" class="headerlink" title="2.spring的XML配置"></a>2.spring的XML配置</h3><p>在pom中导入依赖<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--springioc相关--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--jdbctemplate--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--整合junit测试所需包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><br>在bean.xml配置文件中导入约束<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><br>导入对应的对象和注入依赖关系<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要导入约束并声明文件位置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建service实现类交给spring容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountSrevice"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入对应依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建dao实现类交给spring容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.AccountDaoImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入对应依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">ref</span>=<span class="string">"jdbcTemplate"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建jdbctemplate交给spring容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入对应依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--创建数据源交给spring容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入对应依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></p><h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h3><p>测试代码(参考<a href="https://mylijuxin.github.io/2018/08/24/spring%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84IOC%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">spring基于注解的IOC配置中三.5:spring整合Junit测试</a>)<br><div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="meta">@ContextConfiguration</span>(locations = <span class="string">"classpath:bean.xml"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">"白小白"</span>);</span><br><span class="line">        account.setMoney(<span class="number">110</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        accountService.delete(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名更新money</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">"aaa"</span>);</span><br><span class="line">        account.setMoney(<span class="number">666666</span>);</span><br><span class="line">        accountService.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找对应用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findByNameTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Account aaa = accountService.findByName(<span class="string">"aaa"</span>);</span><br><span class="line">        System.out.println(aaa);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h2 id="五-请自行测试结果-结束"><a href="#五-请自行测试结果-结束" class="headerlink" title="五.请自行测试结果,结束"></a>五.请自行测试结果,结束</h2>]]></content>
    
    <summary type="html">
    
      关于spring框架的入门学习使用
    
    </summary>
    
      <category term="spring框架" scheme="http://myLiJuXin.com/categories/spring%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="IOC,概念" scheme="http://myLiJuXin.com/tags/IOC-%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>mybatis入门</title>
    <link href="http://myLiJuXin.com/2016/11/21/mybatis%E5%85%A5%E9%97%A8/"/>
    <id>http://myLiJuXin.com/2016/11/21/mybatis入门/</id>
    <published>2016-11-20T16:08:20.000Z</published>
    <updated>2018-10-19T07:48:13.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-mybatis介绍"><a href="#一-mybatis介绍" class="headerlink" title="一.mybatis介绍"></a>一.mybatis介绍</h2><p><div>mybatis是一个优秀的基于java的<strong>持久层框架</strong>，它内部封装了 jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建 statement 等繁杂的过程。<br><br>mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为java对象并返回。<br><br>采用ORM思想解决了实体和数据库映射的问题，对jdbc进行了封装，屏蔽了jdbc api底层访问细节，使我们不用与 jdbc api 打交道，就可以完成对数据库的持久化操作。</div></p><div><h2 id="二-mybatis快速入门-简单案例"><a href="#二-mybatis快速入门-简单案例" class="headerlink" title="二.mybatis快速入门(简单案例)"></a>二.mybatis快速入门(简单案例)</h2><h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h3><h4 id="1-1-创建测试项目-普通java项目或者javaweb项目均可本文以通过maven创建的普通java项目为例-如下图"><a href="#1-1-创建测试项目-普通java项目或者javaweb项目均可本文以通过maven创建的普通java项目为例-如下图" class="headerlink" title="1.1 创建测试项目,普通java项目或者javaweb项目均可本文以通过maven创建的普通java项目为例,如下图:"></a>1.1 创建测试项目,普通java项目或者javaweb项目均可本文以通过maven创建的普通java项目为例,如下图:</h4><p><img src="/2016/11/21/mybatis入门/1.png" alt="">    </p><h4 id="1-2-导入需要的依赖-如下图-复制到pom中"><a href="#1-2-导入需要的依赖-如下图-复制到pom中" class="headerlink" title="1.2 导入需要的依赖(如下图)复制到pom中"></a>1.2 导入需要的依赖(如下图)复制到pom中</h4> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><h4 id="1-3-准备数据库-本文使用mysql-sql脚本如下"><a href="#1-3-准备数据库-本文使用mysql-sql脚本如下" class="headerlink" title="1.3 准备数据库(本文使用mysql)sql脚本如下"></a>1.3 准备数据库(本文使用mysql)sql脚本如下</h4> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`mybatisdb`</span>;</span><br><span class="line"><span class="keyword">USE</span> <span class="string">`mybatisdb`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line"> <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line"> <span class="string">`birthday`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line"> <span class="string">`sex`</span> <span class="built_in">CHAR</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line"> <span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line"> PRIMARY <span class="keyword">KEY</span>  (<span class="string">`id`</span>)</span><br><span class="line"> ) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line">     </span><br><span class="line"> <span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`user`</span>(<span class="string">`id`</span>,<span class="string">`username`</span>,<span class="string">`birthday`</span>,<span class="string">`sex`</span>,<span class="string">`address`</span>) <span class="keyword">values</span> (<span class="number">41</span>,<span class="string">'老王'</span>,<span class="string">'2018-02-27 17:47:08'</span>,<span class="string">'男'</span>,<span class="string">'北京'</span>),(<span class="number">42</span>,<span class="string">'小二王'</span>,<span class="string">'2018-03-02 15:09:37'</span>,<span class="string">'女'</span>,<span class="string">'北京金燕龙'</span>),(<span class="number">43</span>,<span class="string">'小二王'</span>,<span class="string">'2018-03-04 11:34:34'</span>,<span class="string">'女'</span>,<span class="string">'北京金燕龙'</span>),(<span class="number">45</span>,<span class="string">'传智播客'</span>,<span class="string">'2018-03-04 12:04:06'</span>,<span class="string">'男'</span>,<span class="string">'北京金燕龙'</span>),(<span class="number">46</span>,<span class="string">'老王'</span>,<span class="string">'2018-03-07 17:37:26'</span>,<span class="string">'男'</span>,<span class="string">'北京'</span>),(<span class="number">48</span>,<span class="string">'小马宝莉'</span>,<span class="string">'2018-03-08 11:44:00'</span>,<span class="string">'女'</span>,<span class="string">'北京修正'</span>);</span><br></pre></td></tr></table></figure></div></div><h3 id="2-使用mybatis查询表中数据"><a href="#2-使用mybatis查询表中数据" class="headerlink" title="2. 使用mybatis查询表中数据"></a>2. 使用mybatis查询表中数据</h3><h4 id="2-1-创建SqlMapConfig-xml核心配置-如下图"><a href="#2-1-创建SqlMapConfig-xml核心配置-如下图" class="headerlink" title="2.1 创建SqlMapConfig.xml核心配置(如下图)"></a>2.1 创建SqlMapConfig.xml核心配置(如下图)</h4><p> <img src="/2016/11/21/mybatis入门/2.png" alt=""><br>  核心配置代码如下:<br>   <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">      PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">      "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>   </span><br><span class="line"> <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatisdb?characterEncoding=utf8"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span>   </span><br><span class="line">   <span class="tag">&lt;/<span class="name">environment</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-定义表对应的实体类-如下图"><a href="#2-2-定义表对应的实体类-如下图" class="headerlink" title="2.2 定义表对应的实体类(如下图)"></a>2.2 定义表对应的实体类(如下图)</h4><p> <img src="/2016/11/21/mybatis入门/3.png" alt=""></p><p>User代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.domain;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> Date birthday;</span><br><span class="line"><span class="keyword">private</span> String sex;</span><br><span class="line"><span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> address;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.address = address;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div></p><h4 id="2-3-定义操作表的sql映射文件UserMapper-xml-如下图"><a href="#2-3-定义操作表的sql映射文件UserMapper-xml-如下图" class="headerlink" title="2.3 定义操作表的sql映射文件UserMapper.xml(如下图)"></a>2.3 定义操作表的sql映射文件UserMapper.xml(如下图)</h4><p>  <img src="/2016/11/21/mybatis入门/4.png" alt=""><br>sql映射文件代码如下:<br> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"> <span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.itcast.dao.UserDao"</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- select 查询 --&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUser"</span> <span class="attr">resultType</span>=<span class="string">"cn.itcast.domain.User"</span>&gt;</span></span><br><span class="line">select *  from user   </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></p><h4 id="2-4-在核心配置中注册sql映射文件代码"><a href="#2-4-在核心配置中注册sql映射文件代码" class="headerlink" title="2.4 在核心配置中注册sql映射文件代码"></a>2.4 在核心配置中注册sql映射文件代码</h4><p>代码如下:<br> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatisdb?characterEncoding=utf8"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span>   </span><br><span class="line"> <span class="tag">&lt;/<span class="name">environment</span>&gt;</span>   </span><br><span class="line"> <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注册Sql映射文件 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></p><h4 id="2-5-两种使用方法"><a href="#2-5-两种使用方法" class="headerlink" title="2.5 两种使用方法"></a>2.5 两种使用方法</h4><h5 id="2-5-1-使用代理的方法查询"><a href="#2-5-1-使用代理的方法查询" class="headerlink" title="2.5.1 使用代理的方法查询"></a>2.5.1 使用代理的方法查询</h5><h6 id="2-5-1-1-创建UserDao接口并定义方法-此处为查"><a href="#2-5-1-1-创建UserDao接口并定义方法-此处为查" class="headerlink" title="2.5.1.1 创建UserDao接口并定义方法(此处为查)"></a>2.5.1.1 创建UserDao接口并定义方法(此处为查)</h6><p><img src="/2016/11/21/mybatis入门/5.png" alt=""><br>接口代码如下:<br> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有user的方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h6 id="2-5-1-2-创建Test测试类测试"><a href="#2-5-1-2-创建Test测试类测试" class="headerlink" title="2.5.1.2 创建Test测试类测试"></a>2.5.1.2 创建Test测试类测试</h6><p><img src="/2016/11/21/mybatis入门/6.png" alt=""><br>测试代码如下:<br> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserTest</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//加载文件</span></span><br><span class="line">InputStream is = UserDaoTest.class.getClassLoader().getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line"><span class="comment">//解析xml</span></span><br><span class="line">SqlSessionFactoryBuilder sfb = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line"><span class="comment">//解析xml,创建Factory</span></span><br><span class="line">SqlSessionFactory build = sfb.build(is);</span><br><span class="line"><span class="comment">//创建session对象</span></span><br><span class="line">SqlSession session = build.openSession();</span><br><span class="line"><span class="comment">//通过动态代理反射获取对应接口实现类</span></span><br><span class="line">UserDao userDao = session.getMapper(UserDao.class);</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">List&lt;User&gt; user = userDao.getUser();</span><br><span class="line"><span class="keyword">for</span> (User user1 : user) &#123;</span><br><span class="line">System.out.println(user1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-5-1-3-查询结果"><a href="#2-5-1-3-查询结果" class="headerlink" title="2.5.1.3 查询结果:"></a>2.5.1.3 查询结果:</h6><p><img src="/2016/11/21/mybatis入门/7.png" alt=""></p><h5 id="2-5-2-使用传统方法查询"><a href="#2-5-2-使用传统方法查询" class="headerlink" title="2.5.2 使用传统方法查询"></a>2.5.2 使用传统方法查询</h5><h6 id="2-5-2-1-在代理的基础上扩展增加创建UserDao的实现类UserDaoImpl"><a href="#2-5-2-1-在代理的基础上扩展增加创建UserDao的实现类UserDaoImpl" class="headerlink" title="2.5.2.1 在代理的基础上扩展增加创建UserDao的实现类UserDaoImpl"></a>2.5.2.1 在代理的基础上扩展增加创建UserDao的实现类UserDaoImpl</h6><p><img src="/2016/11/21/mybatis入门/8.png" alt=""><br>UserDaoImpl代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> SqlSessionFactory factory ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span><span class="params">(SqlSessionFactory factory)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.factory = factory;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession session = factory.openSession();</span><br><span class="line"><span class="comment">//使用的是mybatis提供的方法</span></span><br><span class="line"><span class="keyword">return</span> session.selectList(<span class="string">"us.findAll"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div></p><h6 id="2-5-2-2-创建Test测试类"><a href="#2-5-2-2-创建Test测试类" class="headerlink" title="2.5.2.2 创建Test测试类"></a>2.5.2.2 创建Test测试类</h6><p><img src="/2016/11/21/mybatis入门/6.png" alt=""><br>测试代码如下:<br> <div><div class="fold_hider"><div class="close hider_title">点击显示或隐藏</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> SqlSessionFactory build;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">InputStream is = UserTest.class.getClassLoader().getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">build = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">UserDao dao = <span class="keyword">new</span> UserDaoImpl(build);</span><br><span class="line">List&lt;User&gt; list = dao.findAll();</span><br><span class="line">System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p><h6 id="2-5-2-3-查询结果"><a href="#2-5-2-3-查询结果" class="headerlink" title="2.5.2.3 查询结果:"></a>2.5.2.3 查询结果:</h6><p><img src="/2016/11/21/mybatis入门/7.png" alt=""></p><h2 id="三-大致就是这样了-结束"><a href="#三-大致就是这样了-结束" class="headerlink" title="三.大致就是这样了,结束"></a>三.大致就是这样了,结束</h2></div>]]></content>
    
    <summary type="html">
    
      关于mybatis框架的入门学习使用
    
    </summary>
    
      <category term="mybatis框架" scheme="http://myLiJuXin.com/categories/mybatis%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="持久层框架,简单" scheme="http://myLiJuXin.com/tags/%E6%8C%81%E4%B9%85%E5%B1%82%E6%A1%86%E6%9E%B6-%E7%AE%80%E5%8D%95/"/>
    
  </entry>
  
</feed>
